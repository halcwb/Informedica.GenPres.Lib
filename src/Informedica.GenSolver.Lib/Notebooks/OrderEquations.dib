#!fsharp

#load "../Scripts/load.fsx"

open Informedica.GenSolver.Lib

#!fsharp

open Informedica.GenSolver.Lib
open Informedica.Utils.Lib.BCL
open MathNet.Numerics
open Types

module Api = Informedica.GenSolver.Lib.Api
module Solver = Informedica.GenSolver.Lib.Solver
module Name = Variable.Name
module ValueRange = Variable.ValueRange

let procss s = $"{s} " |> printfn "%s"

type Logger = Types.Logging.Logger

let printEqs = Solver.printEqs true procss
let solve n p eqs =
    let logger = { Logger.Log = ignore }
    let n = n |> Name.createExc
    Api.solve id logger None n p eqs
//    |> fun eqs -> eqs |> printEqs |> printfn "%A"; eqs

let setMinIncl v = 
    v
    |> BigRational.fromFloat
    |> PropsMinIncl


let init     = Api.init
let nonZeroNegative = Api.nonZeroNegative

#!fsharp

let eqs = 
    [
        "itm_cmp_qty = itm_cmp_cnc * cmp_qty "
        "itm_orb_qty = itm_orb_cnc * orb_qty"
        "itm_orb_qty = itm_cmp_cnc * cmp_orb_qty "
        "itm_dos_qty = itm_cmp_cnc * cmp_dos_qty "
        "itm_dos_qty = itm_orb_cnc * orb_dos_qty "
        "itm_dos_qty = itm_dos_rte * pres_time "
        "itm_dos_qty = itm_dos_qty_adj * ord_adj "
        "itm_dos_tot = itm_cmp_cnc * cmp_dos_tot "
        "itm_dos_tot = itm_orb_cnc * orb_dos_tot "
        "itm_dos_tot = itm_dos_qty * pres_freq"
        "itm_dos_tot = itm_dos_tot_adj * ord_adj "
        "itm_dos_rte = itm_cmp_cnc * cmp_dos_rte "
        "itm_dos_rte = itm_orb_cnc * orb_dos_rte "
        "itm_dos_rte = itm_dos_rte_adj * ord_adj "
        "itm_dos_ord = item_dos_tot * ord_time"
        "itm_dos_ord = item_dos_rte * ord_time"
        "itm_dos_qty_adj = itm_cmp_cnc * cmp_dos_qty_adj "
        "itm_dos_qty_adj = itm_orb_cnc * orb_dos_qty_adj "
        "itm_dos_qty_adj = itm_dos_rte_adj * pres_time"
        "itm_dos_tot_adj = itm_cmp_cnc * cmp_dos_tot_adj "
        "itm_dos_tot_adj = itm_orb_cnc * orb_dos_tot_adj "
        "itm_dos_tot_adj = itm_dos_qty_adj * pres_freq"
        "itm_dos_rte_adj = itm_cmp_cnc * cmp_dos_rte_adj "
        "itm_dos_rte_adj = itm_orb_cnc * orb_dos_rte_adj "
        "cmp_orb_qty = cmp_orb_cnc * orb_qty"
        "cmp_orb_qty = cmp_qty * cmp_orb_cnt"
        "cmp_ord_qty = cmp_qty * cmp_ord_cnt"
        "cmp_ord_qty = cmp_dos_tot * ord_time"
        "cmp_ord_qty = cmp_dos_rte * ord_time"
        "cmp_dos_qty = cmp_orb_cnc * orb_dos_qty"
        "cmp_dos_qty = cmp_dos_rte * pres_time"
        "cmp_dos_qty = cmp_dos_qty_adj * ord_adj"
        "cmp_dos_tot = cmp_orb_cnc * orb_dos_tot"
        "cmp_dos_tot = cmp_dos_qty * pres_freq"
        "cmp_dos_tot = cmp_dos_tot_adj * ord_adj"
        "cmp_dos_rte = cmp_orb_cnc * orb_dos_rte"
        "cmp_dos_rte = cmp_dos_rte_adj * ord_adj"
        "cmp_dos_qty_adj = cmp_orb_cnc * orb_dos_qty_adj"
        "cmp_dos_qty_adj = cmp_dos_rte_adj * pres_time"
        "cmp_dos_tot_adj = cmp_orb_cnc * orb_dos_tot_adj"
        "cmp_dos_tot_adj = cmp_dos_qty_adj * pres_freq"
        "cmp_dos_rte_adj = cmp_orb_cnc * orb_dos_rte_adj"
        "orb_ord_qty = ord_cnt * orb_qty"
        "orb_ord_qty = orb_dos_tot * ord_time"
        "orb_ord_qty = orb_dos_rte * ord_time"
        "orb_dos_qty = orb_dos_rte * pres_time"
        "orb_dos_qty = orb_dos_qty_adj * ord_adj"
        "orb_dos_tot = orb_dos_qty * pres_freq"
        "orb_dos_tot = orb_dos_tot_adj * ord_adj"
        "orb_dos_rte = orb_dos_rte_adj * ord_adj"
        "orb_dos_qty_adj = orb_dos_rte_adj * pres_time"
        "orb_dos_tot_adj = orb_dos_qty_adj * pres_freq"
    ]
    |> Api.init
    |> nonZeroNegative
